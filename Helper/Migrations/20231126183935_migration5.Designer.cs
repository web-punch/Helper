// <auto-generated />
using System;
using Helper.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Helper.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20231126183935_migration5")]
    partial class migration5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("Helper.Models.Work", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkPriceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasAlternateKey("DateTime", "Address", "WorkPriceId");

                    b.HasIndex("WorkPriceId");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("Helper.Models.WorkPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("WorkTitleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WorkTitleId");

                    b.ToTable("WorkPrices");
                });

            modelBuilder.Entity("Helper.Models.WorkTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WorkTypeId");

                    b.ToTable("WorkTitles");
                });

            modelBuilder.Entity("Helper.Models.WorkType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WorkTypes");
                });

            modelBuilder.Entity("Helper.Models.Work", b =>
                {
                    b.HasOne("Helper.Models.WorkPrice", "WorkPrice")
                        .WithMany("Works")
                        .HasForeignKey("WorkPriceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("WorkPrice");
                });

            modelBuilder.Entity("Helper.Models.WorkPrice", b =>
                {
                    b.HasOne("Helper.Models.WorkTitle", "WorkTitle")
                        .WithMany("WorkPrices")
                        .HasForeignKey("WorkTitleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("WorkTitle");
                });

            modelBuilder.Entity("Helper.Models.WorkTitle", b =>
                {
                    b.HasOne("Helper.Models.WorkType", "WorkType")
                        .WithMany("WorkTitles")
                        .HasForeignKey("WorkTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("WorkType");
                });

            modelBuilder.Entity("Helper.Models.WorkPrice", b =>
                {
                    b.Navigation("Works");
                });

            modelBuilder.Entity("Helper.Models.WorkTitle", b =>
                {
                    b.Navigation("WorkPrices");
                });

            modelBuilder.Entity("Helper.Models.WorkType", b =>
                {
                    b.Navigation("WorkTitles");
                });
#pragma warning restore 612, 618
        }
    }
}
